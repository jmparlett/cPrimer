\frametitle{Free}
\begin{itemize}[<+->]
	\item Lets go over another programming example allocating memory for a struct pointer and using free appropriately.

	\item \begin{minted}[frame=lines, fontsize=\scriptsize]{c}
typedef struct {
    float* vals;
    int length;
} data;

int main(){
    //we can use sizeof like we would for any other data type
    data* D = malloc(sizeof(data));

    //the data is also a pointer so we must allocate memory for it
    D->vals = malloc(sizeof(float) * 5);
    D->length = 5; //we have space for 5 data points

    for (int i = 0; i < D->length; i++) {
        D->vals[i] = 0.25 * (i+1);
    }
    for(int i = 0; i < D->length; i++){
        printf("data point %d: %f\n", i, D->vals[i]);
    }

    //if we fail to free vals before D, then we have created a memory leak.
    free(D->vals);
    free(D);
}
\end{minted}

\end{itemize}
